pipeline {
    agent any

    environment {
        NVM_DIR = "${WORKSPACE}/.nvm"
		GITHUB_TOKEN = credentials("GITHUB_TOKEN")
		DOMAIN = "www.gycoding.com"
    }

    stages {
        stage('Install Node') {
            steps {
                sh '''
                    mkdir -p "$NVM_DIR"
                    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
                    export NVM_DIR="$NVM_DIR"
                    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                    nvm install 18

                    echo '#!/bin/bash' > with-node.sh
                    echo 'export NVM_DIR="$WORKSPACE/.nvm"' >> with-node.sh
                    echo '[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"' >> with-node.sh
                    echo 'nvm use 18' >> with-node.sh
                    echo '"$@"' >> with-node.sh
                    chmod +x with-node.sh
                '''
            }
        }

        stage('Clean install dependencies') {
            steps {
                script {
                    // Limpiamos y luego instalamos las dependencias
                    sh 'rm -rf node_modules'
                    sh 'rm -f package-lock.json'
                    sh './with-node.sh npm install --no-optional'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    withEnv(["NODE_ENV=production", "NEXT_TELEMETRY_DISABLED=1", "NEXT_IGNORE_PLATFORM_CHECK=1"]) {
                        sh './with-node.sh npm run build'
                    }
                }
            }
        }

        stage('Create CNAME file') {
            steps {
                script {
                    writeFile file: './out/CNAME', text: "${params.DOMAIN}"
                }
            }
        }

        stage('Deploy to GitHub Pages') {
            steps {
                withCredentials([string(credentialsId: 'GITHUB_TOKEN', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        rm -rf gh-pages
                        git config --global user.email "willstar111YT@gmail.com"
                        git config --global user.name "gy-gfigueras"

                        git clone --branch gh-pages https://x-access-token:${FRONT_GITHUB_TOKEN}@github.com/GY-CODING/gy-web.git gh-pages

                        rm -rf gh-pages/*
                        cp -r out/* gh-pages/
                        cd gh-pages
                        git add .
                        git commit -m "Deploy from Jenkins"
                        git push origin gh-pages
                    '''
                }
            }
        }
    }
}
